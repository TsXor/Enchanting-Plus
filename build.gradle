import org.apache.tools.ant.filters.ReplaceTokens


static String getBuildNumber() {
    return System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : System.getenv('TRAVIS_BUILD_NUMBER') ? System.getenv('TRAVIS_BUILD_NUMBER') : '0';
}


// Shuts up javadoc failures
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc).tap {
            configureEach {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }
}


buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${mod_version}.${getBuildNumber()}"
group = "${mod_group}"
archivesBaseName = "${mod_name}-${version_minecraft}"

sourceCompatibility = 17
targetCompatibility = 17

minecraft {
    mappings channel: 'parchment', version: version_mappings
    
    runs {
        client {
            // uncomment the following line if you encountered IllegalAccessError when launching with java 17
            //jvmArgs "--add-opens=java.base/sun.security.util=ALL-UNNAMED", "--add-opens=java.base/java.util.jar=ALL-UNNAMED"
            jvmArgs "-Xmx4G", "-Dfile.encoding=utf-8"
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods { modId { source sourceSets.main } }
        }
        server {
            // uncomment the following line if you encountered IllegalAccessError when launching with java 17
            //jvmArgs "--add-opens=java.base/sun.security.util=ALL-UNNAMED", "--add-opens=java.base/java.util.jar=ALL-UNNAMED"
            jvmArgs "-Xmx4G", "-Dfile.encoding=utf-8"
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods { modId { source sourceSets.main } }
        }
        data {
            // uncomment the following line if you encountered IllegalAccessError when launching with java 17
            //jvmArgs "--add-opens=java.base/sun.security.util=ALL-UNNAMED", "--add-opens=java.base/java.util.jar=ALL-UNNAMED"
            jvmArgs "-Xmx4G", "-Dfile.encoding=utf-8"
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods { modId { source sourceSets.main } }
        }
    }
}

sourceSets.main.resources { srcDirs += 'src/generated/resources' }

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url 'https://maven.blamejared.com' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_minecraft}-${version_forge}"

    // Note: Bookshelf version greater than 1.16.5 have prefix like "Forge-"
    implementation fg.deobf("net.darkhax.bookshelf:Bookshelf-${version_minecraft}:${version_bookshelf}")
    
    // Note: CraftTweaker version greater than 1.16.5 have prefix like "forge-"
    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-${version_minecraft}:${version_minetweaker}")
    
    compileOnly fg.deobf("mezz.jei:jei-${version_minecraft}:${version_jei}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${version_minecraft}:${version_jei}")
}

processResources {
    from('src/main/resources/META-INF/mods.toml') {
        filter(ReplaceTokens,
            tokens: [ 'eplus_version' : version.toString(), ]
        )
    }
}

jar {}
